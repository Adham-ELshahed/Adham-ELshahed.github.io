[
  {
    "name": "#binary",
    "category": "literal",
    "description": "Creates a binary value from a list of numbers or a base 64 encoded text value.",
    "syntax": "#binary(value as any) as any",
    "parameters": [
      {
        "name": "value",
        "type": "any",
        "description": "A list of numbers or base 64 encoded text value"
      }
    ],
    "returnType": "binary",
    "examples": [
      {
        "description": "Create a binary value from a list of numbers",
        "code": "#binary({0x48, 0x65, 0x6C, 0x6C, 0x6F})"
      }
    ],
    "remarks": "Creates a binary value from a list of numbers or a base 64 encoded text value.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  },
  {
    "name": "#date",
    "category": "literal",
    "description": "Creates a date value from whole numbers representing the year, month, and day.",
    "syntax": "#date(year as number, month as number, day as number) as date",
    "parameters": [
      {
        "name": "year",
        "type": "number",
        "description": "The year (1 ≤ year ≤ 9999)"
      },
      {
        "name": "month",
        "type": "number", 
        "description": "The month (1 ≤ month ≤ 12)"
      },
      {
        "name": "day",
        "type": "number",
        "description": "The day (1 ≤ day ≤ 31)"
      }
    ],
    "returnType": "date",
    "examples": [
      {
        "description": "Create a date for January 1, 2020",
        "code": "#date(2020, 1, 1)"
      }
    ],
    "remarks": "Raises an error if the date values are not valid.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  },
  {
    "name": "#datetime",
    "category": "literal",
    "description": "Creates a datetime value from numbers representing the year, month, day, hour, minute, and second.",
    "syntax": "#datetime(year as number, month as number, day as number, hour as number, minute as number, second as number) as datetime",
    "parameters": [
      {
        "name": "year",
        "type": "number",
        "description": "The year (1 ≤ year ≤ 9999)"
      },
      {
        "name": "month",
        "type": "number",
        "description": "The month (1 ≤ month ≤ 12)"
      },
      {
        "name": "day", 
        "type": "number",
        "description": "The day (1 ≤ day ≤ 31)"
      },
      {
        "name": "hour",
        "type": "number",
        "description": "The hour (0 ≤ hour ≤ 23)"
      },
      {
        "name": "minute",
        "type": "number",
        "description": "The minute (0 ≤ minute ≤ 59)"
      },
      {
        "name": "second",
        "type": "number",
        "description": "The second (0 ≤ second < 60)"
      }
    ],
    "returnType": "datetime",
    "examples": [
      {
        "description": "Create a datetime for noon on January 1, 2020",
        "code": "#datetime(2020, 1, 1, 12, 0, 0)"
      }
    ],
    "remarks": "Creates a datetime value from numbers representing the year, month, day, hour, minute, and (fractional) second.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  },
  {
    "name": "#datetimezone",
    "category": "literal",
    "description": "Creates a datetimezone value from numbers representing date, time, and timezone offset components.",
    "syntax": "#datetimezone(year as number, month as number, day as number, hour as number, minute as number, second as number, offsetHours as number, offsetMinutes as number) as datetimezone",
    "parameters": [
      {
        "name": "year",
        "type": "number",
        "description": "The year (1 ≤ year ≤ 9999)"
      },
      {
        "name": "month",
        "type": "number",
        "description": "The month (1 ≤ month ≤ 12)"
      },
      {
        "name": "day",
        "type": "number", 
        "description": "The day (1 ≤ day ≤ 31)"
      },
      {
        "name": "hour",
        "type": "number",
        "description": "The hour (0 ≤ hour ≤ 23)"
      },
      {
        "name": "minute",
        "type": "number",
        "description": "The minute (0 ≤ minute ≤ 59)"
      },
      {
        "name": "second",
        "type": "number",
        "description": "The second (0 ≤ second < 60)"
      },
      {
        "name": "offsetHours",
        "type": "number",
        "description": "The timezone offset hours"
      },
      {
        "name": "offsetMinutes",
        "type": "number",
        "description": "The timezone offset minutes"
      }
    ],
    "returnType": "datetimezone",
    "examples": [
      {
        "description": "Create a datetimezone for noon EST on January 1, 2020",
        "code": "#datetimezone(2020, 1, 1, 12, 0, 0, -5, 0)"
      }
    ],
    "remarks": "Creates a datetimezone value with timezone offset information.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  },
  {
    "name": "#duration",
    "category": "literal", 
    "description": "Creates a duration value from numbers representing days, hours, minutes, and seconds.",
    "syntax": "#duration(days as number, hours as number, minutes as number, seconds as number) as duration",
    "parameters": [
      {
        "name": "days",
        "type": "number",
        "description": "The number of days"
      },
      {
        "name": "hours",
        "type": "number",
        "description": "The number of hours"
      },
      {
        "name": "minutes",
        "type": "number",
        "description": "The number of minutes"
      },
      {
        "name": "seconds",
        "type": "number",
        "description": "The number of seconds (can be fractional)"
      }
    ],
    "returnType": "duration",
    "examples": [
      {
        "description": "Create a duration of 1 day, 2 hours, 30 minutes",
        "code": "#duration(1, 2, 30, 0)"
      }
    ],
    "remarks": "Creates a duration value from numbers representing days, hours, minutes, and (fractional) seconds.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  },
  {
    "name": "#table",
    "category": "literal",
    "description": "Creates a table value from columns and rows.",
    "syntax": "#table(columns as any, rows as any) as any",
    "parameters": [
      {
        "name": "columns",
        "type": "any",
        "description": "List of column names, table type, number of columns, or null"
      },
      {
        "name": "rows",
        "type": "any",
        "description": "List of lists, where each element contains column values for a single row"
      }
    ],
    "returnType": "table",
    "examples": [
      {
        "description": "Create a simple table with names and scores",
        "code": "#table({\"Name\", \"Score\"}, {{\"Betty\", 90.3}, {\"Carl\", 89.5}})"
      },
      {
        "description": "Create an empty table",
        "code": "#table({}, {})"
      }
    ],
    "remarks": "The columns value can be a list of column names, a table type, a number of columns, or null. The rows value is a list of lists.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  },
  {
    "name": "#time",
    "category": "literal",
    "description": "Creates a time value from numbers representing the hour, minute, and second.",
    "syntax": "#time(hour as number, minute as number, second as number) as time", 
    "parameters": [
      {
        "name": "hour",
        "type": "number",
        "description": "The hour (0 ≤ hour ≤ 24, if 24 then minute and second must be 0)"
      },
      {
        "name": "minute",
        "type": "number",
        "description": "The minute (0 ≤ minute ≤ 59)"
      },
      {
        "name": "second",
        "type": "number",
        "description": "The second (0 ≤ second < 60, can be fractional)"
      }
    ],
    "returnType": "time",
    "examples": [
      {
        "description": "Create a time for 2:30:45 PM",
        "code": "#time(14, 30, 45)"
      }
    ],
    "remarks": "Raises an error if hour is 24 and minute or second are not 0.",
    "compatibility": {},
    "deprecated": false,
    "volatile": false
  }
]
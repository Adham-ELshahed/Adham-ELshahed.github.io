Core Functional Requirements:

Main Navigation Component Logic:

Active State Highlighting: The main navigation bar must visually distinguish the user's current top-level section with a clear 'active' style (e.g., different color, underline, bolder font). Only one section can be active at a time.

State Persistence on Nested Routes: The 'active' state for a top-level section must be maintained even when the user navigates to a child page within that section. For example, if the user is viewing a specific group page, the 'Groups' link in the main navigation must remain active.

URL Routing and Deep Linking:

Unique & Descriptive URLs: Every distinct view in the application must correspond to a unique, shareable URL. The URL structure should be logical and reflect the content hierarchy (e.g., /groups/{groupId}, /blogs/{postId}).

State Synchronization: The UI state (what the user sees) must always be synchronized with the URL. Navigating directly to a URL must render the exact same view as navigating there through clicks.

Homepage Navigation Logic:

Root Domain Resolution: Any request to the root domain of the site (e.g., https://your-app.com/) must resolve to the application's designated homepage.

Clickable Logo for 'Home' Navigation: The primary site logo, consistently placed in the header, must function as a hyperlink. A click on this logo from any page must navigate the user back to the homepage.

Acceptance Criteria (Testable Scenarios):

Given a user is on any page, when they click 'Groups' in the navigation, then they are taken to the main groups page AND the 'Groups' link is set to its 'active' state.

Given a user is on the main 'Groups' page, when they click to view a specific group, then the URL updates (e.g., to /groups/group-123) AND the 'Groups' link in the main navigation REMAINS in its 'active' state.

Given a user is not on the website, when they paste the URL https://your-app.com/groups/group-123 into their browser, then the specific group page loads directly AND the 'Groups' link is correctly set to its 'active' state.

Given a user is on a deep page like /blogs/my-first-post, when they click the site logo in the header, then they are navigated to the homepage (/).

Deliverables:

Based on the requirements above, please provide the following:

User Stories: A list of user stories covering all the specified functionality.

Component Plan: A high-level breakdown of the front-end components needed to build this system (e.g., NavBar, NavLink, AppRouter).

Code Example: A pseudo-code or a concrete code example in React using react-router-dom that demonstrates how to implement the routing logic and the active link styling.